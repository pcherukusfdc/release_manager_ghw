name: release_manager1

on:
  workflow_call:
    inputs:
      repo_name:
        required: true
        type: string
      pr_number:
        required: true
        type: number
     
jobs:
  processing_release_manager:
    name: collecting_release_version_for_other
    runs-on: [ self-hosted, linux, code_release ]
    steps:
    - id: step1
      name: Checking which files changed 
      run: |
        echo "Get the changes before we merge"
        org_repo=${{ inputs.repo_name }}
        repo_name=$(echo ${org_repo} | cut -d/ -f2)
        
        
        if [[ ${repo_name} =~ "tb_" ]] ; then
          runner_is=tableau_runner
          puppet_servers='ndc-pupma-lp701, ndc-pupcm-lp701, ndc-pupcm-lp702'
        elif  [[ ${repo_name} =~ "bt_" ]] ; then
          runner_is=code_release
          puppet_servers='phx-pupma-lp701, phx-pupcm-lp701, phx-pupcm-lp702'
        else
          runner_is=code_release-tableau_runner
          puppet_servers='phx-pupma-lp701, phx-pupcm-lp701, phx-pupcm-lp702'-'ndc-pupma-lp701, ndc-pupcm-lp701, ndc-pupcm-lp702'
        fi
        
        #echo ${runner_is}
        
        #echo "runner_to_use=$(echo ${runner_is})" >> $GITHUB_OUTPUT
        #echo "runner_to_use=$(echo $runner_is | tr '-' '\n' | jq -R -s -c 'split("\n")[:-1]' | sed 's/\"//g')" >> $GITHUB_OUTPUT
        echo "runner_to_use=$(echo $runner_is | tr ',' '\n' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
        
        echo "puppet_servers=$(echo $puppet_servers | tr ',' '\n' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
        
        cd ~/git
        if [[ -d ${repo_name} ]] ;  then rm -rf ${repo_name} ; fi
          
        gh auth login --with-token < ~/.gh_secrets
          
        echo "Cloing the repo"
        git clone -b release "https://github.com/${org_repo}"
          
        cd ${repo_name}
        echo "I am in ${repo_name}"
          
        echo "Checking out the PR"
        gh pr checkout ${{ inputs.pr_number }}
        changes=$(git diff release | grep ^+ | grep -v release.txt | sed 's/+//g')
          
        echo ${changes}
        echo "changes_to_deploy=$(echo $changes | tr ' ' '\n' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
        
        echo "++++++++++++++++++++++++"
        cat $GITHUB_OUTPUT
        echo "++++++++++++++++++++++++"
            
        echo "Merging PR...."
        gh pr merge --merge
        if [ $? -ne 0 ]; then
          echo ""
          echo "PR Merger Failed!!"
          gh auth logout --hostname github.com
          echo ""
          exit 1
        else
          echo ""
          echo "PR Has Been Merged Successfully!!"
          gh auth logout --hostname github.com
        fi
    outputs:
      changes_from_pr: ${{ steps.step1.outputs.changes_to_deploy }}
      runner_to_use: ${{ steps.step1.outputs.runner_to_use }}
        
  processing_release_manager_actions_tableau_runner:
    needs: processing_release_manager
    #if: |
    #  success() ||
    #  startsWith(inputs.repo_name, 'pcherukusfdc/tb') ||
    #  (!startsWith(inputs.repo_name, 'pcherukusfdc/tb') && !startsWith(inputs.repo_name, 'pcherukusfdc/bt'))
    runs-on: ${{ matrix.runners }}
    strategy:
      matrix:
        runners: ${{ fromJSON(needs.processing_release_manager.outputs.runner_to_use) }}
        list_of_changes: ${{ fromJSON(needs.processing_release_manager.outputs.changes_from_pr) }}
    steps:
    - id: step3
      name: Deploying puppet module
      uses: pcherukusfdc/release_manager@main
      with:
        repo_name: '${{ inputs.repo_name }}'
        pr_changes: ${{ matrix.list_of_changes }}
        #running_on: 'tableau'
 
  #processing_release_manager_actions_bt_runner:
  #  if: | 
  #    success() ||
  #    startsWith(inputs.repo_name, 'pcherukusfdc/bt') ||
  #    (!startsWith(inputs.repo_name, 'pcherukusfdc/tb') && !startsWith(inputs.repo_name, 'pcherukusfdc/bt'))
  #  runs-on: [ self-hosted, linux, code_release ]
  #  strategy:
  #    matrix:
  #      list_of_changes: ${{ fromJSON(needs.processing_release_manager.outputs.changes_from_pr) }}
  #  steps:
  #  - id: step3
  #    name: Deploying puppet module
  #    uses: pcherukusfdc/release_manager@main
  #    with:
  #      repo_name: '${{ inputs.repo_name }}'
  #      pr_changes: ${{ matrix.list_of_changes }}
  #      running_on: 'bt'
